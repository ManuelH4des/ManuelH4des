import cv2
import numpy as np

# Initialize the camera
cap = cv2.VideoCapture(0)

# Define the codec and create VideoWriter object
fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('output.avi', fourcc, 20.0, (640, 480))

# Initialize previous frame
prev_frame = None

while cap.isOpened():
    # Capture frame-by-frame
    ret, frame = cap.read()

    # Convert to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # If previous frame is None, assign the current frame to previous frame
    if prev_frame is None:
        prev_frame = gray
        continue

    # Calculate the absolute difference between previous and current frame
    diff_frame = cv2.absdiff(prev_frame, gray)

    # Apply a binary threshold to the difference frame
    _, thresh_frame = cv2.threshold(diff_frame, 25, 255, cv2.THRESH_BINARY)

    # Find contours in the thresholded frame
    contours, _ = cv2.findContours(thresh_frame, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Draw contours on the original frame
    for contour in contours:
        (x, y, w, h) = cv2.boundingRect(contour)
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

    # Update previous frame
    prev_frame = gray

    # Write the frame
    out.write(frame)

    # Display the resulting frame
    cv2.imshow('Motion Detector', frame)

    # Exit if the user presses the 'q' key
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the capture and writer objects and close windows
cap.release()
out.release()
cv2.destroyAllWindows()
